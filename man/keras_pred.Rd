% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/return_pred_functions2.R
\name{keras_pred}
\alias{keras_pred}
\title{Keras Prediction Function with Seed Control and Averaging for Return Prediction}
\usage{
keras_pred(train_data, test_data, config = list())
}
\arguments{
\item{train_data}{A data frame with \code{stock_id}, \code{date}, \code{return_label}, and features for training.}

\item{test_data}{A data frame with \code{stock_id}, \code{date}, and features for testing.}

\item{config}{A list containing the configuration for the Keras model, including layers, optimizer, loss function, and advanced features like callbacks.}
}
\value{
A tibble with \code{stock_id}, \code{date}, and averaged \code{pred_return} for the test data.
}
\description{
This function trains a Keras neural network to predict returns based on the provided training data.
The Keras model structure is passed in the \code{config} argument, and you can define custom layers, optimizers, loss functions, and callbacks (like early stopping).
Additionally, the function can set seeds for reproducibility and create averaged predictions using multiple seeds.
}
\details{
\subsection{Config Structure}{
\itemize{
\item \code{layers}: A list of layer definitions.
\item \code{loss}: The loss function to use.
\item \code{optimizer}: A list specifying the optimizer.
\item \code{epochs}: Number of epochs to train the model.
\item \code{batch_size}: Batch size for training.
\item \code{verbose}: Verbosity level for Keras training.
\item \code{callbacks}: List of Keras callback functions.
\item \code{seeds}: A list of seeds for reproducibility and multiple prediction averaging.
\item \code{python_env}: Python environment to use for training.
}
}
}
\examples{
\dontrun{
data(data_ml)
train_data_ex <- data_ml[1:100, c("stock_id", "date", "R1M_Usd", "Div_Yld", "Eps", "Mkt_Cap_12M_Usd", "Mom_11M_Usd", "Ocf", "Pb", "Vol1Y_Usd")]
test_data_ex <- data_ml[101:150, c("stock_id", "date", "Div_Yld", "Eps", "Mkt_Cap_12M_Usd", "Mom_11M_Usd", "Ocf", "Pb", "Vol1Y_Usd")]
config <- list(
  layers = list(
    list(type = "dense", units = 32, activation = "relu"),
    list(type = "dense", units = 16, activation = "relu"),
    list(type = "dense", units = 1, activation = "linear")
  ),
  loss = 'mean_squared_error',
  optimizer = list(name = "optimizer_adam", learning_rate = 0.001),
  epochs = 10,
  batch_size = 128,
  verbose = 1,
  seeds = c(42, 123, 456),  # Multiple seeds for averaging predictions
  plot_training = TRUE
)
predictions <- keras_pred(train_data_ex, test_data_ex, config)
print(predictions)
}
}
